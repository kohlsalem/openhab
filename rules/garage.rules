//import org.openhab.core.library.types.*

rule "Feedback"
when 
  Item Hoermann received update 
then
   if(Hoermann.state=="OPEN")
   {
	   if( Garage.state != ON)
	   {
	   	 Garage.sendCommand(ON) 
	   } 
//     WohnzimerRemind.sendCommand("Die Garage ist offen") 
//	   say("Das Garagentor ist offen", "voicerss:deDE", "sonos:PLAY1:RINCON_949F3E07F2FE01400")
   }
	if(Hoermann.state=="CLOSED")
	{
	   if( Garage.state != OFF)
	   {
	   	 Garage.sendCommand(OFF) 
	   } 
//	   say("Das Garagentor ist geschlossen", "voicerss:deDE", "sonos:PLAY1:RINCON_949F3E07F2FE01400")
	}
end

rule "GarageOpen"
when
  Item Garage received command ON
then
   if( (Hoermann.state != null) && (Hoermann.state == "CLOSED"))
   {
     Hoermann.sendCommand("DOOPEN")  
   }
end

rule "GarageClose"
when
  Item Garage received command OFF
then
   if( (Hoermann.state != null) && (Hoermann.state == "OPEN"))
   {
     Hoermann.sendCommand("DOCLOSE")     
   }
end


/* 
var Number GarageOld = 0

 
rule "GarageSetInt"
when
  Item Garage received command  
then
    logDebug("LeseLampe", "Entering with Command : "+GarageOld.toString+"-->"+receivedCommand.toString)
  

   if( receivedCommand==80){
       logDebug("LeseLampe", "Recieved 80==Ã–ffnen")
       Thread::sleep(3000)
        Garage.sendCommand(0) //offen
   } else if( receivedCommand==20){
      logDebug("LeseLampe", "Recieved 20==Schliessen")
      Thread::sleep(3000)
        Garage.sendCommand(100)//geschlossen
   }
   logDebug("LeseLampe", "Exit")
   GarageOld = receivedCommand
 end
*/
