import org.joda.time.*

  
rule "AutomowerError"
when
	Item AutoMowerStatus  received command 
then
  logDebug("automower", "AutomowerError: Entering Rule with {}",receivedCommand.toString)
 
  // only work for active commands
  if( receivedCommand.toString == "7" ){
    logDebug("automower", "AutomowerError: Sending Notification")
    
    sendNotification("michael@kohlsalem.com","Rasi hat sich festgefahren!!!")
	 
    sendNotification("britta@kohlsalem.com","Rasi hat sich festgefahren!!!")
  }
end

rule "AutomowerRemote"
when
	Item AutoMowerGo  received command 
then
  logDebug("automower", "AutomowerRemote: Entering Rule with {}",receivedCommand.toString)
  
 /* if( receivedCommand.toString == "1000"||
  	  receivedCommand.toString == "2000"||
  	  receivedCommand.toString == "3000"||
  	  receivedCommand.toString == "4000"){
    var left = ((AutoMowerLeft.state as DecimalType).intValue - 50) * 2  // Normalize from 0 - 100 to -100 - 100
    var right = ((AutoMowerRight.state as DecimalType).intValue - 50) * 2  // Normalize from 0 - 100 to -100 - 100
 
    var commandstring = "http://192.168.178.60/xml?cmd=direct&left=" + left + "&right=" + right + "&timeout=" + receivedCommand.toString ;

    logDebug("automower", "AutomowerRemote: Sending: {}", commandstring )
    
    var String result = sendHttpGetRequest(commandstring)
	  
	logDebug("automower", "AutomowerRemote: Automower returned: {}", result)
    
    AutoMowerGo.sendCommand("")
  } */
  
  if( receivedCommand.toString == "1"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=80&right=80&timeout=1000" )
  } else  if( receivedCommand.toString == "2"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=80&right=80&timeout=2300" )
  } else  if( receivedCommand.toString == "3"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=80&right=80&timeout=3600" )
  } else  if( receivedCommand.toString == "4"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=80&right=80&timeout=5000" )
  } else  if( receivedCommand.toString == "ll"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=-80&right=80&timeout=1000" )
  } else  if( receivedCommand.toString == "l"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=-50&right=50&timeout=1000" )
  } else  if( receivedCommand.toString == "rr"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=80&right=-80&timeout=1000" )
  } else  if( receivedCommand.toString == "r"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=50&right=-50&timeout=1000" )
  } else  if( receivedCommand.toString == "-1"){
    sendHttpGetRequest("http://192.168.178.60/xml?cmd=direct&left=-70&right=-70&timeout=1000" )
  }
  
  if( receivedCommand.toString != ""){
    AutoMowerGo.sendCommand("")
  }
   
end

rule "AutomowerStartJob"
when
	Item AutoMowerJob  received command 
then
  logDebug("automower", "AutomowerStartJob: Entering Rule with {}",receivedCommand.toString)
 
  // only work for active commands
  if( receivedCommand.toString == "1" ||
  	  receivedCommand.toString == "2" ||
  	  receivedCommand.toString == "3" ||
  	  receivedCommand.toString == "4" ){
 
	  logDebug("automower", "AutomowerStartJob: Starting Job")
	 
	  var Number runtime = Integer::parseInt(receivedCommand.toString)
	 
	  var hour   = now.getHourOfDay
	  var minute = now.getMinuteOfHour
	 
	  var commandstring = "http://192.168.178.60/json?cmd=mode&mode=job&begin=" + hour + ":" + minute + "&end=" +  (hour + runtime) + ":" + minute ;
	    
	  logDebug("automower", "AutomowerStartJob: Sending: {}", commandstring )
	 
	  var String result = sendHttpGetRequest(commandstring)
	  
	  logDebug("automower", "AutomowerStartJob: Automower returned: {}", result)
	  
	  // reset the button
	  AutoMowerJob.sendCommand("")
  }
end

rule "AutoMowerModeHomeAutoEOD"
when
	Item AutoMowerModeHomeAutoEOD  received command 
then
  logDebug("automower", "AutoMowerModeHomeAutoEOD: Entering Rule with {}",receivedCommand.toString)
   
  if( receivedCommand.toString == "auto" ||
  	  receivedCommand.toString == "home" ||
  	  receivedCommand.toString == "eod" ||
  	  receivedCommand.toString == "man" ){
  	  	
/*
 *   0: Auto
 *   1: Manuell
 *   2: Home
 *   3: Demo
 */	  	
  	  switch  receivedCommand.toString {
    	case  receivedCommand.toString == "auto": AutoMowerMode.sendCommand("0")
    	case  receivedCommand.toString == "home": AutoMowerMode.sendCommand("2")
    	case  receivedCommand.toString == "eod": AutoMowerMode.sendCommand("0")
    	case  receivedCommand.toString == "man": AutoMowerMode.sendCommand("1")
      }
      // reset the button
	  AutoMowerModeHomeAutoEOD.sendCommand("")
  }
end
